g <- g + theme(axis.text.x = element_text(size=15),axis.text.y = element_text(size=15))
g <- g + theme(legend.title = element_text(size=15),legend.text = element_text(size=15))
g <- g + theme(strip.text.y = element_text(size=15))
g <- g + ylim(c(0,0.8))
plot(g)
d <- data.frame(Pose = Pose$eva,Spo = Spo$eva)
df <- data.frame(group=colnames(d),mean = apply(d,2,mean),se = sapply(d,function(x) sqrt(var(as.vector(x))/length(x))))
# 描画キャンパスを作成
g <- ggplot(
df,                           # ggplot2 用のデータフレーム
aes (                         # 座標の設定情報
x = group,                  # x 座標を group の値をセット
y = mean,                   # y 座標に mean の値をセット
fill = group
)
)
g <- g + geom_bar(stat = "identity")  # 棒グラフのレイヤー
g <- g + geom_errorbar(               # エラーバーのレイヤー
aes(
ymin = mean - se,
ymax = mean + se,
width = 0.3
))
g <- g + theme_bw()
g <- g + theme(axis.title.x = element_text(size=15),axis.title.y = element_text(size=15))
g <- g + theme(axis.text.x = element_text(size=15),axis.text.y = element_text(size=15))
g <- g + theme(legend.title = element_text(size=15),legend.text = element_text(size=15))
g <- g + theme(strip.text.y = element_text(size=15))
g <- ylim(c(0,0.8))
plot(g)
d <- data.frame(Pose = Pose$eva,Spo = Spo$eva)
df <- data.frame(group=colnames(d),mean = apply(d,2,mean),se = sapply(d,function(x) sqrt(var(as.vector(x))/length(x))))
# 描画キャンパスを作成
g <- ggplot(
df,                           # ggplot2 用のデータフレーム
aes (                         # 座標の設定情報
x = group,                  # x 座標を group の値をセット
y = mean,                   # y 座標に mean の値をセット
fill = group
)
)
g <- g + geom_bar(stat = "identity")  # 棒グラフのレイヤー
g <- g + geom_errorbar(               # エラーバーのレイヤー
aes(
ymin = mean - se,
ymax = mean + se,
width = 0.3
))
g <- g + theme_bw()
g <- g + theme(axis.title.x = element_text(size=15),axis.title.y = element_text(size=15))
g <- g + theme(axis.text.x = element_text(size=15),axis.text.y = element_text(size=15))
g <- g + theme(legend.title = element_text(size=15),legend.text = element_text(size=15))
g <- g + theme(strip.text.y = element_text(size=15))
g <- g + ylim(c(0,0.8))
plot(g)
d <- data.frame(Pose = Pose$eva,Spo = Spo$eva)
df <- data.frame(group=colnames(d),mean = apply(d,2,mean),se = sapply(d,function(x) sqrt(var(as.vector(x))/length(x))))
# 描画キャンパスを作成
g <- ggplot(
df,                           # ggplot2 用のデータフレーム
aes (                         # 座標の設定情報
x = group,                  # x 座標を group の値をセット
y = mean,                   # y 座標に mean の値をセット
fill = group
)
)
g <- g + geom_bar(stat = "identity")  # 棒グラフのレイヤー
g <- g + ylim(c(0,0.8))
g <- g + geom_errorbar(               # エラーバーのレイヤー
aes(
ymin = mean - se,
ymax = mean + se,
width = 0.3
))
g <- g + theme_bw()
g <- g + theme(axis.title.x = element_text(size=15),axis.title.y = element_text(size=15))
g <- g + theme(axis.text.x = element_text(size=15),axis.text.y = element_text(size=15))
g <- g + theme(legend.title = element_text(size=15),legend.text = element_text(size=15))
g <- g + theme(strip.text.y = element_text(size=15))
plot(g)
d <- data.frame(Pose = Pose$eva,Spo = Spo$eva)
df <- data.frame(group=colnames(d),mean = apply(d,2,mean),se = sapply(d,function(x) sqrt(var(as.vector(x))/length(x))))
# 描画キャンパスを作成
g <- ggplot(
df,                           # ggplot2 用のデータフレーム
aes (                         # 座標の設定情報
x = group,                  # x 座標を group の値をセット
y = mean,                   # y 座標に mean の値をセット
fill = group
)
)
g <- g + geom_bar(stat = "identity")  # 棒グラフのレイヤー
g <- g + geom_errorbar(               # エラーバーのレイヤー
aes(
ymin = mean - se,
ymax = mean + se,
width = 0.3
))
g <- g + theme_bw()
g <- g + theme(axis.title.x = element_text(size=15),axis.title.y = element_text(size=15))
g <- g + theme(axis.text.x = element_text(size=15),axis.text.y = element_text(size=15))
g <- g + theme(legend.title = element_text(size=15),legend.text = element_text(size=15))
g <- g + theme(strip.text.y = element_text(size=15))
g <- g + ylim(c(0,0.9))
plot(g)
d <- data.frame(Pose = Pose$eva,Spo = Spo$eva)
df <- data.frame(group=colnames(d),mean = apply(d,2,mean),se = sapply(d,function(x) sqrt(var(as.vector(x))/length(x))))
# 描画キャンパスを作成
g <- ggplot(
df,                           # ggplot2 用のデータフレーム
aes (                         # 座標の設定情報
x = group,                  # x 座標を group の値をセット
y = mean,                   # y 座標に mean の値をセット
fill = group
)
)
g <- g + geom_bar(stat = "identity")  # 棒グラフのレイヤー
g <- g + geom_errorbar(               # エラーバーのレイヤー
aes(
ymin = mean - se,
ymax = mean + se,
width = 0.3
))
g <- g + theme_bw()
g <- g + theme(axis.title.x = element_text(size=15),axis.title.y = element_text(size=15))
g <- g + theme(axis.text.x = element_text(size=15),axis.text.y = element_text(size=15))
g <- g + theme(legend.title = element_text(size=15),legend.text = element_text(size=15))
g <- g + theme(strip.text.y = element_text(size=15))
g <- g + ylim(c(0,0.95))
plot(g)
d <- data.frame(Pose = Pose$eva,Spo = Spo$eva)
df <- data.frame(group=colnames(d),mean = apply(d,2,mean),se = sapply(d,function(x) sqrt(var(as.vector(x))/length(x))))
# 描画キャンパスを作成
g <- ggplot(
df,                           # ggplot2 用のデータフレーム
aes (                         # 座標の設定情報
x = group,                  # x 座標を group の値をセット
y = mean,                   # y 座標に mean の値をセット
fill = group
)
)
g <- g + geom_bar(stat = "identity")  # 棒グラフのレイヤー
g <- g + geom_errorbar(               # エラーバーのレイヤー
aes(
ymin = mean - se,
ymax = mean + se,
width = 0.3
))
g <- g + theme_bw()
g <- g + theme(axis.title.x = element_text(size=15),axis.title.y = element_text(size=15))
g <- g + theme(axis.text.x = element_text(size=15),axis.text.y = element_text(size=15))
g <- g + theme(legend.title = element_text(size=15),legend.text = element_text(size=15))
g <- g + theme(strip.text.y = element_text(size=15))
g <- g + ylim(c(0,1))
plot(g)
hist(rnorm(50,5,5))
hist(rnorm(30000,5,5))
hist(rnorm(3000,5,5))
hist(rnorm(50,5,10))
hist(rnorm(3000,5,10))
hist(rnorm(50,5,10))
hist(rnorm(3000,5,10))
hist(rnorm(50,5,10))
hist(rnorm(3000,5,10))
#package for sample data
library(gpk)
library(ggplot2)
library(lme4)
library(rstanarm)
library(foreach)
library(rstan)
#data
#######
x_n_po <- read.mf(dir="nega_pov",header=T)
x_n_ne <- read.mf(dir="nega_nev",header=T)
x_n_ar <- read.mf(dir="nega_arv",header=T)
x_n_po$AB <- (x_n_po$AB - mean(x_n_po$AB))/sd(x_n_po$AB)
x_n_po$BB <- (x_n_po$BB - mean(x_n_po$BB))/sd(x_n_po$BB)
x_n_po$CB <- (x_n_po$CB - mean(x_n_po$CB))/sd(x_n_po$CB)
x_n_ne$AB <- (x_n_ne$AB - mean(x_n_ne$AB))/sd(x_n_ne$AB)
x_n_ne$BB <- (x_n_ne$BB - mean(x_n_ne$BB))/sd(x_n_ne$BB)
x_n_ne$CB <- (x_n_ne$CB - mean(x_n_ne$CB))/sd(x_n_ne$CB)
x_n_ar$AB <- (x_n_ar$AB - mean(x_n_ar$AB))/sd(x_n_ar$AB)
x_n_ar$BB <- (x_n_ar$BB - mean(x_n_ar$BB))/sd(x_n_ar$BB)
x_n_ar$CB <- (x_n_ar$CB - mean(x_n_ar$CB))/sd(x_n_ar$CB)
x_p_po <- read.mf(dir="posi_pov",header=T)
x_p_ne <- read.mf(dir="posi_nev",header=T)
x_p_ar <- read.mf(dir="posi_arv",header=T)
x_p_po$AB <- (x_p_po$AB - mean(x_p_po$AB))/sd(x_p_po$AB)
x_p_po$BB <- (x_p_po$BB - mean(x_p_po$BB))/sd(x_p_po$BB)
x_p_po$CB <- (x_p_po$CB - mean(x_p_po$CB))/sd(x_p_po$CB)
x_p_ne$AB <- (x_p_ne$AB - mean(x_p_ne$AB))/sd(x_p_ne$AB)
x_p_ne$BB <- (x_p_ne$BB - mean(x_p_ne$BB))/sd(x_p_ne$BB)
x_p_ne$CB <- (x_p_ne$CB - mean(x_p_ne$CB))/sd(x_p_ne$CB)
x_p_ar$AB <- (x_p_ar$AB - mean(x_p_ar$AB))/sd(x_p_ar$AB)
x_p_ar$BB <- (x_p_ar$BB - mean(x_p_ar$BB))/sd(x_p_ar$BB)
x_p_ar$CB <- (x_p_ar$CB - mean(x_p_ar$CB))/sd(x_p_ar$CB)
x_po <- merge(x_p_po,x_n_po,all=T)
x_ne <- merge(x_p_ne,x_n_ne,all=T)
x_ar <- merge(x_p_ar,x_n_ar,all=T)
x_po$AB <- (x_po$AB - mean(x_po$AB))/sd(x_po$AB)
x_po$BB <- (x_po$BB - mean(x_po$BB))/sd(x_po$BB)
x_po$CB <- (x_po$CB - mean(x_po$CB))/sd(x_po$CB)
x_ne$AB <- (x_ne$AB - mean(x_ne$AB))/sd(x_ne$AB)
x_ne$BB <- (x_ne$BB - mean(x_ne$BB))/sd(x_ne$BB)
x_ne$CB <- (x_ne$CB - mean(x_ne$CB))/sd(x_ne$CB)
x_ar$AB <- (x_ar$AB - mean(x_ar$AB))/sd(x_ar$AB)
x_ar$BB <- (x_ar$BB - mean(x_ar$BB))/sd(x_ar$BB)
x_ar$CB <- (x_ar$CB - mean(x_ar$CB))/sd(x_ar$CB)
######
d <- read.table("clipboard",header=T)
Pose <- filter(d,N0P1S2 == "1")
head(d)
library(dplyr)
library(ggplot2)
Pose <- filter(d,N0P1S2 == "1")
Spo <- filter(d,N0P1S2 == "2")
d <- data.frame(Pose = Pose$eva,Spo = Spo$eva)
df <- data.frame(group=colnames(d),mean = apply(d,2,mean),se = sapply(d,function(x) sqrt(var(as.vector(x))/length(x))))
g <- ggplot(
df,                           # ggplot2 用のデータフレーム
aes (                         # 座標の設定情報
x = group,                  # x 座標を group の値をセット
y = mean,                   # y 座標に mean の値をセット
fill = group
)
)
g <- g + geom_bar(stat = "identity")  # 棒グラフのレイヤー
g <- g + geom_errorbar(               # エラーバーのレイヤー
aes(
ymin = mean - se,
ymax = mean + se,
width = 0.3
))
g <- g + theme_bw()
g <- g + theme(axis.title.x = element_text(size=15),axis.title.y = element_text(size=15))
g <- g + theme(axis.text.x = element_text(size=15),axis.text.y = element_text(size=15))
g <- g + theme(legend.title = element_text(size=15),legend.text = element_text(size=15))
g <- g + theme(strip.text.y = element_text(size=15))
plot(g)
d <- read.table("clipboard",header=T)
Pose <- filter(d,N0P1S2 == "1")
Spo <- filter(d,N0P1S2 == "2")
d <- data.frame(Pose = Pose$eva,Spo = Spo$eva)
df <- data.frame(group=colnames(d),mean = apply(d,2,mean),se = sapply(d,function(x) sqrt(var(as.vector(x))/length(x))))
g <- ggplot(
df,                           # ggplot2 用のデータフレーム
aes (                         # 座標の設定情報
x = group,                  # x 座標を group の値をセット
y = mean,                   # y 座標に mean の値をセット
fill = group
)
)
g <- g + geom_bar(stat = "identity")  # 棒グラフのレイヤー
g <- g + geom_errorbar(               # エラーバーのレイヤー
aes(
ymin = mean - se,
ymax = mean + se,
width = 0.3
))
g <- g + theme_bw()
g <- g + theme(axis.title.x = element_text(size=15),axis.title.y = element_text(size=15))
g <- g + theme(axis.text.x = element_text(size=15),axis.text.y = element_text(size=15))
g <- g + theme(legend.title = element_text(size=15),legend.text = element_text(size=15))
g <- g + theme(strip.text.y = element_text(size=15))
plot(g)
g <- g +ylim(0,8)
g
g <- g +ylim(0,0.8)
g
# 描画キャンパスを作成
g <- ggplot(
df,                           # ggplot2 用のデータフレーム
aes (                         # 座標の設定情報
x = group,                  # x 座標を group の値をセット
y = mean,                   # y 座標に mean の値をセット
fill = group
)
)
g <- g + geom_bar(stat = "identity")  # 棒グラフのレイヤー
g <- g + geom_errorbar(               # エラーバーのレイヤー
aes(
ymin = mean - se,
ymax = mean + se,
width = 0.3
))
g <- g + theme_bw()
g <- g + theme(axis.title.x = element_text(size=15),axis.title.y = element_text(size=15))
g <- g + theme(axis.text.x = element_text(size=15),axis.text.y = element_text(size=15))
g <- g + theme(legend.title = element_text(size=15),legend.text = element_text(size=15))
g <- g + theme(strip.text.y = element_text(size=15))
plot(g)
g <- g + ylim(0,0.8)
g
g <- g + ylim(0,0.85)
# 描画キャンパスを作成
g <- ggplot(
df,                           # ggplot2 用のデータフレーム
aes (                         # 座標の設定情報
x = group,                  # x 座標を group の値をセット
y = mean,                   # y 座標に mean の値をセット
fill = group
)
)
g <- g + geom_bar(stat = "identity")  # 棒グラフのレイヤー
g <- g + geom_errorbar(               # エラーバーのレイヤー
aes(
ymin = mean - se,
ymax = mean + se,
width = 0.3
))
g <- g + theme_bw()
g <- g + theme(axis.title.x = element_text(size=15),axis.title.y = element_text(size=15))
g <- g + theme(axis.text.x = element_text(size=15),axis.text.y = element_text(size=15))
g <- g + theme(legend.title = element_text(size=15),legend.text = element_text(size=15))
g <- g + theme(strip.text.y = element_text(size=15))
plot(g)
g <- g + ylim(0,0.83)
g
# 描画キャンパスを作成
g <- ggplot(
df,                           # ggplot2 用のデータフレーム
aes (                         # 座標の設定情報
x = group,                  # x 座標を group の値をセット
y = mean,                   # y 座標に mean の値をセット
fill = group
)
)
g <- g + geom_bar(stat = "identity")  # 棒グラフのレイヤー
g <- g + geom_errorbar(               # エラーバーのレイヤー
aes(
ymin = mean - se,
ymax = mean + se,
width = 0.3
))
g <- g + theme_bw()
g <- g + theme(axis.title.x = element_text(size=15),axis.title.y = element_text(size=15))
g <- g + theme(axis.text.x = element_text(size=15),axis.text.y = element_text(size=15))
g <- g + theme(legend.title = element_text(size=15),legend.text = element_text(size=15))
g <- g + theme(strip.text.y = element_text(size=15))
plot(g)
g <- g + ylim(0,0.85)
g
g <- g + ylim(0,0.9)
g
g <- g + ylim(0,0.95)
g
g <- g + ylim(0,1)
g
g <- g + ylim(0,0.99)
g
g <- g + ylim(0,0.95)
g <- g + ylim(0,0.96)
g
# 描画キャンパスを作成
g <- ggplot(
df,                           # ggplot2 用のデータフレーム
aes (                         # 座標の設定情報
x = group,                  # x 座標を group の値をセット
y = mean,                   # y 座標に mean の値をセット
fill = group
)
)
g <- g + geom_bar(stat = "identity")  # 棒グラフのレイヤー
g <- g + geom_errorbar(               # エラーバーのレイヤー
aes(
ymin = mean - se,
ymax = mean + se,
width = 0.3
))
g <- g + theme_bw()
g <- g + theme(axis.title.x = element_text(size=15),axis.title.y = element_text(size=15))
g <- g + theme(axis.text.x = element_text(size=15),axis.text.y = element_text(size=15))
g <- g + theme(legend.title = element_text(size=15),legend.text = element_text(size=15))
g <- g + theme(strip.text.y = element_text(size=15))
plot(g)
g <- g + ylim(0,0.96)
g
install.packages("GPArotation")
library(rstan)
library(loo)
library(ggplot2)
library(psych)
library(GPArotation)
library(tidyr)
library(dplyr)
library(bayesplot)
map <- function(z){
density(z)$x[which.max(density(z)$y)]
}
alpha_true <- matrix(c(
0.7,0,0,0,0,
0.7,0,0,0,0,
0.7,0,0,0,0,
0.7,0,0,0,0.3,
0.7,0,0,0,0,
0,0.7,0,0,0,
0,0.7,0,0,0,
0,0.7,0,0,0,
0,0.7,0,0,0,
0,0.6,0,0,0.4,
0,0,0.7,0,0,
0,0,0.7,0,0,
0.3,0,0.7,0,0,
0,0,0.7,0,0,
0,0,0.7,0,0,
0,0,0,0.7,0,
0,0,0,0.7,0,
0,0,0,0.7,0.5,
0,0,0,0.7,0,
0,0,0,0.7,0),byrow=T,nrow=20,ncol=5)
phi_true <- matrix(c(
1,0.5,0.4,0.3,0.2,
0.5,1,0.5,0.4,0.3,
0.4,0.5,1,0.5,0.4,
0.3,0.4,0.5,1,0.5,
0.2,0.3,0.4,0.5,1),ncol=5)
alpha_true
phi_true
Sig <- alpha_true%*%phi_true%*%t(alpha_true)
sigma_true <- 1-diag(Sig)
Sig <- Sig+diag(sigma_true)
library(MASS)
dat <- mvrnorm(1000,rep(0,20),Sig)
library(psych)
library(GPArotation)
result <- fa(dat,nfactors=5,rotate="oblimin")
result$loadings
model.horse <- stan_model("exec/factor_horse.stan")
model.horse <- stan_model("factor_horse.stan")
A <- 5 #number of factors
N <- nrow(dat)
P <- ncol(dat)
spd <- as.matrix(cov(dat)*(N-1))
y <- as.matrix(scale(dat,center=T,scale=F))
datastan <- list(N=N,P=P,A=A,S1=0.1,S2=0.01,spd=spd,y=y)
alpha_init <- as.matrix(fa(dat,nfactors = A,rotate="geominQ")$loading)
phi_init <- as.matrix(fa(dat,nfactors = A,rotate="geominQ")$Phi)
sigma_init <- fa(dat,nfactors = A,rotate="geominQ")$uniquenesses^0.5
is <- list(alpha=alpha_init,phi=phi_init,sigma=sigma_init)
fit.horse <- sampling(model.horse,data=datastan,#init=list(is),
iter=8000,warmup=2000,thin=3,chains=1)
rstan::extract(fit.fac)$log_lik %>% waic
print(fit.horse ,pars=c("alpha"))
print(fit.horse ,pars=c("phi"))
print(fit.horse ,pars=c("lambda","tau"))
fit.horse %>% as.array %>% mcmc_dens(regex_pars="^alpha\\[1,")
fit.horse %>% as.array %>% mcmc_trace(regex_pars="^alpha\\[1,")
fit.horse %>% as.array %>% mcmc_acf(regex_pars="^alpha\\[1,")
rstan::extract(fit.horse )$loading %>% apply(c(2,3),map)
rstan::extract(fit.horse )$phi %>% apply(c(2,3),mean)
install.packages("pwr")
install.packages("pwr2")
library(pwr2)
?pwr2
library(pwr)
?pwr
install.packages("hBayesDM")
library(lme4)
?lmer
citation()
citation(lme4)
citation(lmer)
citation(lmerTest)
citation("lme4")
library(irr)
?irr
?kappa
?cohen
?kappa2
d <- read.table("clipboard",header=T)
library(lme4)
summary(lmer(EA1 ~ PD+Ekan+PT+Fan+EC+Atte+Body+sex+(1|ID)+(1|film),d))
summary(lmerTest::lmer(EA1 ~ PD+Ekan+PT+Fan+EC+Atte+Body+sex+(1|ID)+(1|film),d))
.05/8
.05/7
summary(lmerTest::lmer(EA2 ~ PD+Ekan+PT+Fan+EC+Atte+Body+sex+(1|ID)+(1|film),d))
.10/8
str(lmerTest::lmer(EA2 ~ PD+Ekan+PT+Fan+EC+Atte+Body+sex+(1|ID)+(1|film),d))
summary(lmerTest::lmer(EA2 ~ PD+Ekan+PT+Fan+EC+Atte+Body+sex+(1|ID)+(1|film),d))$p.value
summary(lmerTest::lmer(EA2 ~ PD+Ekan+PT+Fan+EC+Atte+Body+sex+(1|ID)+(1|film),d))$p
lmerTest::lmer(EA2 ~ PD+Ekan+PT+Fan+EC+Atte+Body+sex+(1|ID)+(1|film),d)$p
summary(lmerTest::lmer(EA2 ~ PD+Ekan+PT+Fan+EC+Atte+Body+sex+(1|ID)+(1|film),d))$Pr
str(summary(lmerTest::lmer(EA2 ~ PD+Ekan+PT+Fan+EC+Atte+Body+sex+(1|ID)+(1|film),d)))
summary(lmerTest::lmer(EA2 ~ PD+Ekan+PT+Fan+EC+Atte+Body+sex+(1|ID)+(1|film),d))$coefficient
summary(lmerTest::lmer(EA2 ~ PD+Ekan+PT+Fan+EC+Atte+Body+sex+(1|ID)+(1|film),d))$coefficient[,5]
p2 <- summary(lmerTest::lmer(EA2 ~ PD+Ekan+PT+Fan+EC+Atte+Body+sex+(1|ID)+(1|film),d))$coefficient[,5]
p1 <- summary(lmerTest::lmer(EA1 ~ PD+Ekan+PT+Fan+EC+Atte+Body+sex+(1|ID)+(1|film),d))$coefficient[,5]
install.packages("qvalue")
nam <- rnorm(13,18,2)
mean(nam)
nam
nam <- rnorm(13,19,1)
nam
mean(nam)
sd(nam)
library(qvalue)
p1 <- summary(lmerTest::lmer(EA1 ~ PD+Ekan+PT+Fan+EC+Atte+Body+sex+(1|ID)+(1|film),d))$coefficient[,5]
library(zoo)
?zoo
install.packages("tidyverse")
d <- read.table("clipboard", header=T)
head(d)
library(lmerTest)
library(qvalue)
library(qvalues)
library(rstanarm)
?hs
install.packages("rmarkdown")
setwd("/Users/nsush/personal_site")
rmarkdown::render_site()
rmarkdown::render_site()
